default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]
default.invalid.url.message=Property [{0}] of class [{1}] with value [{2}] is not a valid URL
default.invalid.creditCard.message=Property [{0}] of class [{1}] with value [{2}] is not a valid credit card number
default.invalid.email.message=Property [{0}] of class [{1}] with value [{2}] is not a valid e-mail address
default.invalid.range.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]
default.invalid.size.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]
default.invalid.max.message=Property [{0}] of class [{1}] with value [{2}] exceeds maximum value [{3}]
default.invalid.min.message=Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]
default.invalid.max.size.message=Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]
default.invalid.min.size.message=Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]
default.invalid.validator.message=Property [{0}] of class [{1}] with value [{2}] does not pass custom validation
default.not.inlist.message=Property [{0}] of class [{1}] with value [{2}] is not contained within the list [{3}]
default.blank.message=Property [{0}] of class [{1}] cannot be blank
default.not.equal.message=Property [{0}] of class [{1}] with value [{2}] cannot equal [{3}]
default.null.message=Property [{0}] of class [{1}] cannot be null
default.not.unique.message=Property [{0}] of class [{1}] with value [{2}] must be unique

default.paginate.prev=Previous
default.paginate.next=Next
default.boolean.true=True
default.boolean.false=False
default.date.format=yyyy-MM-dd HH:mm:ss z
default.number.format=0

# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=Property {0} must be a valid URL
typeMismatch.java.net.URI=Property {0} must be a valid URI
typeMismatch.java.util.Date=Property {0} must be a valid Date
typeMismatch.java.lang.Double=Property {0} must be a valid number
typeMismatch.java.lang.Integer=Property {0} must be a valid number
typeMismatch.java.lang.Long=Property {0} must be a valid number
typeMismatch.java.lang.Short=Property {0} must be a valid number
typeMismatch.java.math.BigDecimal=Property {0} must be a valid number
typeMismatch.java.math.BigInteger=Property {0} must be a valid number

# Flight Contest
fc.programtitle=Flight Contest
fc.programfoot=Flight Contest. Created by <a href="http://www.praeziflug.de" target="_blank">Deutscher Praezisionsflug-Verein e.V.</a>. Released under the <a href="/fc/licenses/GPL_license.txt">GNU GENERAL PUBLIC LICENSE</a>. Details see <a href="/fc/licenses/README.txt">here</a>.

fc.create=Create
fc.delete=Delete
fc.edit=Edit
fc.update=Update
fc.created={0} created.
fc.deleted={0} deleted.
fc.updated={0} updated.
fc.imported={0} imported.
fc.notimported={0} not imported.
fc.notfound={0} not found with id {1}.
fc.notdeleted={0} with id {1} could not be deleted.
fc.notupdated=Another user has updated this data while you were editing.
fc.areyousure=Are you sure?
fc.settings=Settings
fc.internal=Internal
fc.language=Language
fc.changelanguage=Change Language
fc.changecontest=Change Contest
fc.licenses=Licenses
fc.noassigned=No assigned
fc.nocalculated=No calculated
fc.selectall=Select all
fc.deselectall=Deselect all
fc.assign=Assign
fc.cancel=Cancel
fc.print=Print
fc.import=Import

fc.number=No.
fc.title=Title
fc.titlenumber=Titel number
fc.tas=TAS
fc.truetrack=True Track
fc.trueheading=True Heading
fc.groundspeed=Ground Speed
fc.procedureturn=Procedure Turn
fc.distance=Distance
fc.distance.total=Total distance
fc.distance.coord=Distance (Coordinate)
fc.distance.coord.short=(Coordinate)
fc.distance.map=Distance (Map)
fc.distance.map.short=(Map)
fc.distance.map.measure=Distance measure (Map)
fc.legtime=Flight time
fc.tpname=Point
fc.tptime=Local time
fc.typename=Type
fc.mark=AFLOS point
fc.latitude=Latitude
fc.longitude=Longitude
fc.altitude=Altitude
fc.gatewidth=Gate Width
fc.scale=Map scale

fc.grad=°
fc.min=′
fc.sec=″
fc.knot=kt
fc.mile=NM
fc.mm=mm
fc.foot=ft
fc.time.h=h
fc.time.min=min
fc.time.s=s
fc.time.hminsec=hh:mm:ss
fc.time.minsec=mm:ss
fc.points=Points
fc.required=Required
fc.notrequired=Not required
fc.yes=Yes
fc.no=No
fc.unknown=?

fc.aflos=AFLOS

fc.aflos.routedefs.list=Reference Data
fc.aflos.routedefs.routename=Route name

fc.aflos.crewnames.list=Captured crews
fc.aflos.crewnames.startno=No.
fc.aflos.crewnames.name=Name

fc.aircraft=Aircraft
fc.aircraft.list=Aircraft List
fc.aircraft.print=Print aircrafts
fc.aircraft.new=New Aircraft
fc.aircraft.create=Create Aircraft
fc.aircraft.show=Aircraft Details
fc.aircraft.edit=Edit Aircraft
fc.aircraft.registration=Registration
fc.aircraft.registration.error=Aircraft with registration {0} already exists.
fc.aircraft.type=A/C Type
fc.aircraft.colour=Colour
fc.aircraft.user1=User 1
fc.aircraft.user2=User 2
fc.aircraft.notassigned=Please assign aircraft to all crews first.
fc.aircraft.printerror=Error at aircraft list print: {0}

fc.contest=Contest
fc.contest.new=New Contest
fc.contest.new.test=Test Contests
fc.contest.create=Create Contest
fc.contest.show=Contest Details
fc.contest.edit=Edit Contest
fc.contest.delete=Delete Contest
fc.contest.delete.areyousure=All contest data will be deleted. Are you sure?
fc.contest.exist=Contest already exists.
fc.contest.overview=Contest Plan
fc.contest.settings=Contest Settings

fc.contestday=Day
fc.contestday.list=Day List
fc.contestday.create=Create Day
fc.contestday.show=Day Details
fc.contestday.edit=Edit Day
fc.contestday.from=Day from
fc.contestday.add=[Add Day]
fc.contestday.add1=Add Day

fc.contestdaytask=Task of Day
fc.contestdaytask.list=Task of Day List
fc.contestdaytask.listplanning=Task of Day Planning
fc.contestdaytask.listresults=Task of Day Results
fc.contestdaytask.settings=Settings
fc.contestdaytask.planning=Planning
fc.contestdaytask.results=Results
fc.contestdaytask.create=Create Task of Day
fc.contestdaytask.show=Task of Day Details
fc.contestdaytask.edit=Edit Task of Day
fc.contestdaytask.from=Task of Day from
fc.contestdaytask.add=[Add Task]
fc.contestdaytask.add1=Add Task
fc.contestdaytask.firsttime=First time (local time) [hh:mm]
fc.contestdaytask.takeoffinterval.normal=Interval between two aircrafts
fc.contestdaytask.takeoffinterval.fasteraircraft=Takeoff interval to faster aircraft
fc.contestdaytask.planningtestduration=Duration of flight planning test
fc.contestdaytask.preparationduration=Duration of aircraft preparation
fc.contestdaytask.risingduration=Flight time from takeoff to start point
fc.contestdaytask.landingduration=Duration from finish point to aircraft parking
fc.contestdaytask.minnextflightduration=Minimum duration of aircraft maintenance between two fligts
fc.contestdaytask.procedureturnduration=Flight time of Procedure Turn
fc.contestdaytask.addtimevalue=Add/Subtract value of first time
fc.contestdaytask.timetable=Timetable
fc.contestdaytask.planningtestdistancemeasure=Distance measure at flight planning test
fc.contestdaytask.planningtestdirectionmeasure=Direction measure at flight planning test

fc.contestdaytask.selectplanningtesttask=Select Flight Planning Task
fc.contestdaytask.selectplanningtesttask.tocrews=Assign to crews
fc.contestdaytask.selectplanningtesttask.assigned=Flight Planning Task {0} assigned.

fc.contestdaytask.selectflighttestwind=Select Flight Wind
fc.contestdaytask.selectflighttestwind.tocrews=Assign to crews
fc.contestdaytask.selectflighttestwind.assigned=Flight wind {0} assigned.

fc.crew=Crew
fc.crew.list=Crew List
fc.crew.print=Print crews
fc.crew.new=New Crew
fc.crew.create=Create Crew
fc.crew.show=Crew Details
fc.crew.edit=Edit Crew
fc.crew.name=Name
fc.crew.country=Country
fc.crew.aircraft=Aircraft
fc.crew.withaircraft.created=Crew {0} with aircraft {1} created.
fc.crew.printerror=Error at crew list print: {0}

fc.flighttest=Navigation Test
fc.flighttest.list=Navigation Test List
fc.flighttest.create=Create Navigation Test
fc.flighttest.show=Navigation Test Details
fc.flighttest.edit=Edit Navigation Test
fc.flighttest.from=Navigation Test from
fc.flighttest.add=[Add Navigation Test]
fc.flighttest.add1=Add Navigation Test
fc.flighttest.notfound=Please create flight planning test first.

fc.flighttestwind=Flight Wind
fc.flighttestwind.list=Flight Wind List
fc.flighttestwind.create=Create Flight Wind
fc.flighttestwind.show=Flight Wind Details
fc.flighttestwind.edit=Edit Flight Wind
fc.flighttestwind.from=Flight Wind from
fc.flighttestwind.add=[Add FlightWind]
fc.flighttestwind.add1=Add FlightWind
fc.flighttestwind.assign=Assign wind
fc.flighttestwind.notfound=Please create flight wind first.
fc.flighttestwind.notassigned=Please assign flight wind to all crews first.

fc.landingtest=Landing Test
fc.landingtest.list=Landing Test List
fc.landingtest.create=Create Landing Test
fc.landingtest.show=Landing Test Details
fc.landingtest.edit=Edit Landing Test
fc.landingtest.from=Landing Test from
fc.landingtest.add=[Add LandingTest]
fc.landingtest.add1=Add LandingTest

fc.landingtesttask=Landing Task
fc.landingtesttask.list=Landing Task List
fc.landingtesttask.create=Create Landing Task
fc.landingtesttask.show=Landing Task Details
fc.landingtesttask.edit=Edit Landing Task
fc.landingtesttask.from=Landing Task from
fc.landingtesttask.add=[Add LandingTask]
fc.landingtesttask.add1=Add LandingTask

fc.planningtaskresults.giventolate=Plan too late
fc.planningtaskresults.giventolate.on=Set plan too late  
fc.planningtaskresults.giventolate.off=Reset plan too late
fc.planningtaskresults.exitroomtolate=Exit room too late
fc.planningtaskresults.exitroomtolate.on=Set exit room too late
fc.planningtaskresults.exitroomtolate.off=Reset exit room too late
fc.planningtaskresults.complete=Results complete
fc.planningtaskresults.reopen=Reopen results
fc.planningtaskresults.legpenalties=Leg penalties
fc.planningtaskresults.penalties=Total penalties 

fc.planningtest=Flight Planning Test
fc.planningtest.list=Flight Planning Test List
fc.planningtest.create=Create Flight Planning Test
fc.planningtest.show=Flight Planning Test Details
fc.planningtest.edit=Edit Flight Planning Test
fc.planningtest.from=Flight Planning Test from
fc.planningtest.add=[Add Flight Planning Test]
fc.planningtest.add1=Add Flight Planning Test
fc.planningtest.notfound=Please create flight planning test first.

fc.planningtest.directioncorrectgrad=Allowed direction difference 
fc.planningtest.directionpointspergrad=Points per degree of direction difference 
fc.planningtest.timecorrectsecond=Allowed time difference
fc.planningtest.timepointspersecond=Points per second of time difference
fc.planningtest.maxpoints=Maximum points of direction and time difference

fc.planningtesttask=Flight Planning Task
fc.planningtesttask.list=Flight Planning Task List
fc.planningtesttask.create=Create Flight Planning Task
fc.planningtesttask.show=Flight Planning Task Details
fc.planningtesttask.edit=Edit Flight Planning Task
fc.planningtesttask.from=Flight Planning Task from
fc.planningtesttask.add=[Add Flight Planning Task]
fc.planningtesttask.add1=Add Flight Planning Task
fc.planningtesttask.assign=Assign task
fc.planningtesttask.notfound=Please create flight planning task first.
fc.planningtesttask.notassigned=Please assign flight planning task to all crews first.
fc.planningtesttask.print=Print tasks
fc.planningtesttask.printerror=Error at flight planning tasks print: {0}
fc.planningtesttask.printerror2=Error at flight planning task print: {0}

fc.route=Route
fc.route.list=Route List
fc.route.print=Print routes
fc.route.new=New Route
fc.route.create=Create Route
fc.route.show=Route Details
fc.route.edit=Edit Route
fc.route.notfound=Please create route first.
fc.route.selectaflosroute=Select AFLOS route
fc.route.import=Import AFLOS route
fc.route.import.notfound=No AFLOS route found
fc.route.printerror=Error at route list print: {0}

fc.routecoord=Coordinate 
fc.routecoord.list=Coordinate List
fc.routecoord.new=New Coordinate
fc.routecoord.create=Create Coordinate
fc.routecoord.show=Coordinate Details
fc.routecoord.edit=Edit Coordinate
fc.routecoord.from=Coordinate from
fc.routecoord.add=[Add RouteCoordinate]
fc.routecoord.add1=Add RouteCoordinate
fc.routecoord.addsecret=Add Secret RouteCoordinate
fc.routecoord.addsecret.notallowed=Secret RouteCoordinate is only allowed after Start Point and Turn Point.
fc.routecoord.add.notallowed=No coordinates allowed after Landing.

fc.routecoordtype.unknown=Unknown
fc.routecoordtype.to=Take Off
fc.routecoordtype.sp=Start Point
fc.routecoordtype.secret=Secret
fc.routecoordtype.tp=
fc.routecoordtype.fp=Finish Point
fc.routecoordtype.ldg=Landing

fc.routeleg=Leg 
fc.routeleg.list=Leg List
fc.routeleg.new=New Leg
fc.routeleg.create=Create Leg
fc.routeleg.edit=Edit Leg
fc.routeleg.from=Leg from
fc.routeleg.calculate=Calculate legs again
fc.routeleg.calculated=Legs has been calculated again.

fc.routelegcoord.list=Coordinate Leg List
fc.routelegcoord.show=Coordinate Leg Details
fc.routelegcoord.edit=Edit Coordinate Leg

fc.routelegtest.list=Test Leg List
fc.routelegtest.show=Test Leg Details

fc.specialtest=Special Test
fc.specialtest.list=Special Test List
fc.specialtest.create=Create Special Test
fc.specialtest.show=Special Test Details
fc.specialtest.edit=Edit Special Test
fc.specialtest.from=Special Test from
fc.specialtest.add=[Add SpecialTest]
fc.specialtest.add1=Add SpecialTest

fc.specialtesttask=Special Task
fc.specialtesttask.list=Special Task List
fc.specialtesttask.create=Create Special Task
fc.specialtesttask.show=Special Task Details
fc.specialtesttask.edit=Edit Special Task
fc.specialtesttask.from=Special Task from
fc.specialtesttask.add=[Add SpecialTask]
fc.specialtesttask.add1=Add SpecialTask

fc.test=Test
fc.test.list=Test List
fc.test.create=Create Test
fc.test.show=Test Details
fc.test.edit=Edit Test
fc.test.from=Test from
fc.test.maindata=Main data

fc.test.planning=Planning
fc.test.takeoff=Takeoff
fc.test.startpoint=SP
fc.test.checkpoint=CP
fc.test.finishpoint=FP
fc.test.arrival=Arrival
fc.test.taskdata=Data of Task
fc.test.timetable=Timetable
fc.test.timetable.calculate=Calculate timetable
fc.test.timetable.calculated=Timetable has been calculated.
fc.test.timetable.newcalculate=Please calculate timetable first.
fc.test.timetable.print=Print timetable
fc.test.timetable.printerror=Error at timetable print: {0}
fc.test.moveup=Move up
fc.test.movedown=Move down
fc.test.notmovable=You can only move connected marked crews.
fc.test.moveborderreached=Border reached.
fc.test.sequence.calculate=Calculate sequence
fc.test.sequence.calculated=Sequence has been calculated.
fc.test.time.add=Time +
fc.test.time.subtract=Time -
fc.test.planningtask=Flight Planning Task
fc.test.planningtask.here=...
fc.test.planningtask.print.task=Print task
fc.test.planningtask.print.result=Print result
fc.test.planningtaskresults=Results of Flight Planning Task
fc.test.planningtaskresults.legresultlist=Planning Leg List with given values and estimation
fc.test.planningtaskresults.plan=Plan value
fc.test.planningtaskresults.given=Given value
fc.test.planningtaskresults.penalty=Penalty
fc.test.flightplan=Flight Plan
fc.test.flightplan.here=...
fc.test.flightplan.print=Print flight plans
fc.test.flightplan.printed=Flight plans have been printed.
fc.test.flightplan.printerror=Error at flight plans print: {0}
fc.test.flightplan.resolvewarnings=Please resolve timetable warnings first.
fc.test.results=Results
fc.test.results.planning=Flight planning
fc.test.results.summary=Summary
fc.test.results.tests=Tests
fc.test.results.position=Position
fc.test.results.position.none=n/a
fc.test.results.here=...
fc.test.results.edit=Edit Results
fc.test.results.positions.calculate=Calculate positions
fc.test.results.positions.calculated=Positions have been calculated.
fc.test.results.positions.newcalculate=Please calculate positions first.
fc.test.results.print=Print results
fc.test.results.printed=Results have been printed.

fc.testlegflight=Flight Leg
fc.testlegflight.list=Flight Leg List
fc.testlegflight.create=Create Flight Leg
fc.testlegflight.show=Flight Leg Details
fc.testlegflight.edit=Edit Flight Leg
fc.testlegflight.from=Flight Leg from

fc.testlegplanning=Planning Leg 
fc.testlegplanning.list=Planning Leg List
fc.testlegplanning.new=New Planning Leg
fc.testlegplanning.create=Create Planning Leg
fc.testlegplanning.show=Planning Leg Details
fc.testlegplanning.edit=Edit Planning Leg
fc.testlegplanning.from=Planning Leg from

fc.testlegplanningresult=Planning Given Value
fc.testlegplanningresult.list=Planning Given Values
fc.testlegplanningresult.show=Planning Given Value
fc.testlegplanningresult.edit=Edit Planning Given Value {0}
fc.testlegplanningresult.from=Planning Given Value from
fc.testlegplanningresult.value.error=Invalid value of given value
fc.testlegplanningresult.legtime.error=Invalid value of flight time
fc.testlegplanningresult.entered=Values entered

fc.wind=Wind
fc.wind.list=Wind List
fc.wind.new=New Wind
fc.wind.create=Create Wind
fc.wind.show=Wind Details
fc.wind.edit=Edit Wind
fc.wind.name=Vector
fc.wind.direction=Direction
fc.wind.speed=Speed
